/*******************************************************************
** 版  权:	(C) 
** 创建人:
** 日  期:	2008/5/5  15:56
** 版  本:	1.0
** 描  述:
** 应  用:  	
	
**************************** 修改记录 ******************************
** 修改人: 
** 日  期: 
** 描  述: 
********************************************************************/
#ifndef __DTradeMessage_H__
#define __DTradeMessage_H__

#include "DGlobalGame.h"
#include "DGlobalMessage.h"

#pragma pack(1)

/******************************************************************/
// 上层的消息码必定是MSG_MODULEID_TRADE
/******************************************************************/

///////////////////////////////////////////////////////////////////
//请求交易
#define	MSG_TRADE_REQUEST											1
// 消息体
///////////////////////////////////////////////////////////////////
//
struct SMsgTradeRequest_CS
{
	LONGLONG	uidTarget;
};

struct SMsgTradeRequest_SC
{
	LONGLONG	uidDemander;
};

///////////////////////////////////////////////////////////////////
//接受交易
#define	MSG_TRADE_ACCEPT											2
// 消息体
///////////////////////////////////////////////////////////////////
//
struct SMsgTradeAccept_CS
{
	LONGLONG	uidTarget;
};

///////////////////////////////////////////////////////////////////
//拒绝交易
#define	MSG_TRADE_REFUSE											3
// 消息体
///////////////////////////////////////////////////////////////////
//
struct SMsgTradeRefuse_CS
{
	LONGLONG uidTarget;
};

struct SMsgTradeRefuse_SC
{
};

///////////////////////////////////////////////////////////////////
//开始交易
#define	MSG_TRADE_GO												4
// 消息体
///////////////////////////////////////////////////////////////////
//
struct SMsgTradeGo_SC
{
	//对方的UID
	LONGLONG	uidTarget;

	//自己的交易物品栏ID
	ulong		skepId;

	//对方的交易物品栏ID
	ulong		skepIdTarget;
};

///////////////////////////////////////////////////////////////////
//改变金钱
#define	MSG_TRADE_UPDATE_MONEY										5
// 消息体
///////////////////////////////////////////////////////////////////
//
struct SMsgTradeUpdateMoney_CS
{
	ulong money;
};

struct SMsgTradeUpdateMoney_SC
{
	ulong money;
};

///////////////////////////////////////////////////////////////////
//取消交易
#define	MSG_TRADE_CANCEL											6
// 消息体
///////////////////////////////////////////////////////////////////
//
struct SMsgTradeCancel_CS
{
};

struct SMsgTradeCancel_SC
{
	//是谁取消了交易，有可能是自己
	LONGLONG	uid;
};

///////////////////////////////////////////////////////////////////
//锁定交易
#define	MSG_TRADE_LOCK												7
// 消息体
///////////////////////////////////////////////////////////////////
//
struct SMsgTradeLock_CS
{
};

struct SMsgTradeLock_SC
{
	//自己的状态还是对方的状态
	bool	myself;
	//锁定还是解锁
	bool	lock;
};

///////////////////////////////////////////////////////////////////
//确认交易
#define	MSG_TRADE_CONFIRM											8
// 消息体
///////////////////////////////////////////////////////////////////
//
struct SMsgTradeConfirm_CS
{
	ulong	skepId;
	ulong	money;
	ulong	gold;
};

struct SMsgTradeConfirm_SC
{
	bool myself;
};

///////////////////////////////////////////////////////////////////
//完成交易
#define	MSG_TRADE_FINISH											9
// 消息体
///////////////////////////////////////////////////////////////////
//
struct SMsgTradeFinish_SC
{
};

///////////////////////////////////////////////////////////////////
//解锁交易
#define	MSG_TRADE_UNLOCK												10
// 消息体
///////////////////////////////////////////////////////////////////
//
struct SMsgTradeUnLock_CS
{
};

struct SMsgTradeUnLock_SC
{
	//自己的状态还是对方的状态
	bool	myself;
	//锁定还是解锁
	bool	lock;
};

///////////////////////////////////////////////////////////////////
//改变元宝
#define	MSG_TRADE_UPDATE_GOLD											11
// 消息体
///////////////////////////////////////////////////////////////////
struct SMsgTradeUpdateGold_CS
{
	ulong gold;
};

struct SMsgTradeUpdateGold_SC
{
	ulong gold;
};

#pragma pack()

#endif